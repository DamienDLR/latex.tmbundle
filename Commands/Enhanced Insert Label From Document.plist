<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>captureFormatString</key>
	<string>$3</string>
	<key>capturePattern</key>
	<string>^([^:]*):([^:]*):(.*)$</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby
require ENV["TM_SUPPORT_PATH"] + "/lib/exit_codes.rb"
require ENV["TM_SUPPORT_PATH"] + "/lib/dialog.rb"
phrase = STDIN.read.chomp

CMD = '"$TM_SUPPORT_PATH/bin"/LatexLabelCompletions.rb -full=true ' + (phrase == "" ? "" : "-p=#{phrase} " ) + '"$TM_LATEX_BIB" "$TM_LATEX_MASTER" "$TM_FILEPATH"'
res = `#{CMD}`
TextMate.exit_discard if res == ""
items = res.split("\n")
choice = Dialog.menu(items)
TextMate.exit_discard if choice.nil?
selection = items[choice].slice(/^[^%]+/).strip
if ENV['TM_SCOPE'].match(/label/) then
  print selection
elsif selection.match(/^eq(n)?:/)
  print "\\\\${1:eqref}\{#{selection}\}"
else
  print "\\\\${1:ref}\{#{selection}\}"
end
</string>
	<key>fallbackInput</key>
	<string>word</string>
	<key>fileCaptureRegister</key>
	<string>1</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>~</string>
	<key>lineCaptureRegister</key>
	<string>2</string>
	<key>name</key>
	<string>Label Based on Current Word / Selectionâ€¦</string>
	<key>output</key>
	<string>insertAsSnippet</string>
	<key>scope</key>
	<string>text.tex.latex, meta.reference.label.latex</string>
	<key>uuid</key>
	<string>9A3FE182-40AB-4980-AB6C-32DDA22DE41D</string>
</dict>
</plist>
