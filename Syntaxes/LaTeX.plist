<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>tex</string>
	</array>
	<key>firstLineMatch</key>
	<string>^\\documentclass(?!.*\{beamer\})</string>
	<key>foldingStartMarker</key>
	<string>\\begin\{.*\}|%.*\(fold\)\s*$</string>
	<key>foldingStopMarker</key>
	<string>\\end\{.*\}|%.*\(end\)\s*$</string>
	<key>keyEquivalent</key>
	<string>^~L</string>
	<key>name</key>
	<string>LaTeX</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>(?&lt;=\\\w|\\\w{2}|\\\w{3}|\\\w{4})\s</string>
			<key>name</key>
			<string>meta.space-after-command.latex</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?:\\(?:(?:sub)*section|chapter|paragraph|part|addpart|addchap|addsec|minisec))(?:\*?)(?:(?:\[)([^\[]*?)(?:\]))??(\{)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>support.function.section.latex</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.latex</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>this works OK with all kinds of crazy stuff as long as section is one line</string>
			<key>contentName</key>
			<string>entity.name.section.latex</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>meta.section.latex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.tex</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\\begin\{)(lstlisting)(\})(\[(.*)\])?</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.latex</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.latex</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.function.latex</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.function.latex</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Put the lstlisting match before the more general environment listing. Someday it would be nice to make this rule general enough to figure out which language is inside the lstlisting environment rather than my own personal use for python. --Brad</string>
			<key>end</key>
			<string>(\\end\{)(lstlisting)(\})</string>
			<key>name</key>
			<string>source.python.embedded.latex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.python</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\\begin\{)(verbatim)(\})</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.latex</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.latex</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.function.latex</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>markup.raw.verbatim.latex</string>
			<key>end</key>
			<string>(\\end\{)(verbatim)(\})</string>
			<key>name</key>
			<string>meta.verbatim.latex</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.latex</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.latex</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.function.latex</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>These two patterns match the \begin{document} and \end{document} commands, so that the environment matching pattern following them will ignore those commands.</string>
			<key>match</key>
			<string>(\\begin\{)(document)(\})</string>
			<key>name</key>
			<string>meta.begin-document.latex</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.latex</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.latex</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.function.latex</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\end\{)(document)(\})</string>
			<key>name</key>
			<string>meta.end-document.latex</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?:\s*)(\\begin\{)((?:align|equation|eqnarray|multline|aligned|alignat|split|gather|gathered)[*]?)(\})</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.be.latex</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.latex</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.function.be.latex</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\\end\{)(\2)(\})(?:\s*\n)?</string>
			<key>name</key>
			<string>string.quoted.other.environment.math.latex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.math.tex</string>
					<key>name</key>
					<string>string.other.math.latex</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?:\s*)(\\begin\{)(\w+[*]?)(\})</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.be.latex</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.latex</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.function.be.latex</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\\end\{)(\2)(\})(?:\s*\n)?</string>
			<key>name</key>
			<string>meta.environment.list.latex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>text.latex</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\\marginpar\{)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.marginpar.latex</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>name</key>
			<string>meta.paragraph.margin.latex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\\footnote\{)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.footnote.latex</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>name</key>
			<string>meta.footnote.latex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\\emph\{)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.emph.latex</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>markup.italic.emph.latex</string>
			<key>end</key>
			<string>(\})</string>
			<key>name</key>
			<string>meta.emph.latex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\\textit\{)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.textit.latex</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>We put the keyword in a capture and name this capture, so that disabling spell checking for “keyword” won't be inherited by the argument to \textit{...}.

Put specific matches for particular LaTeX keyword.functions before the last two more general functions</string>
			<key>contentName</key>
			<string>markup.italic.textit.latex</string>
			<key>end</key>
			<string>(\})</string>
			<key>name</key>
			<string>meta.textit.latex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\\textbf\{)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.textbf.latex</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>markup.bold.textbf.latex</string>
			<key>end</key>
			<string>(\})</string>
			<key>name</key>
			<string>meta.textbf.latex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\\texttt\{)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.texttt.latex</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>markup.raw.texttt.latex</string>
			<key>end</key>
			<string>(\})</string>
			<key>name</key>
			<string>meta.texttt.latex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.other.item.latex</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\\item\b</string>
			<key>name</key>
			<string>meta.scope.item.latex</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\\(foot)?(full)?cite(al)?(t|p|author|year(par)?|title)?\*?(\[[^\]]*\]){,2}\{)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.cite.latex</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>name</key>
			<string>meta.cite.latex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[\w:.]+</string>
					<key>name</key>
					<string>variable.parameter.cite.latex</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\\(?:\w*[r|R]ef\*?)\{)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.ref.latex</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>name</key>
			<string>meta.label.reference.latex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[a-zA-Z,:0-9]+</string>
					<key>name</key>
					<string>variable.parameter.label.reference.latex</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\\label\{)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.label.latex</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>name</key>
			<string>meta.label.definition.latex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[a-zA-Z,:0-9]+</string>
					<key>name</key>
					<string>variable.parameter.label.definition.latex</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.verb.latex</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.delimiter.latex</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>markup.raw.verb.latex</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.delimiter.latex</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\verb[\*]?)(\S)(.*?)(\2|$)</string>
			<key>name</key>
			<string>meta.verb.latex</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>``</string>
			<key>end</key>
			<string>''|"</string>
			<key>name</key>
			<string>string.quoted.double.latex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>`</string>
			<key>name</key>
			<string>string.quoted.single.open.latex</string>
		</dict>
		<dict>
			<key>match</key>
			<string>'</string>
			<key>name</key>
			<string>string.quoted.single.close.latex</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\\\(</string>
			<key>end</key>
			<string>\\\)</string>
			<key>name</key>
			<string>string.other.math.latex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.math.tex</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\\\[</string>
			<key>end</key>
			<string>\\\]</string>
			<key>name</key>
			<string>string.other.math.latex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.math.tex</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.escape-character.latex</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Not sure if this is the proper classification. This is a catch-all for \&lt;symbol&gt; so that e.g. \" doesn't start an (invalid) string</string>
			<key>match</key>
			<string>(\\)[^A-Za-z\n]</string>
			<key>name</key>
			<string>constant.character.escape.latex</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\\$</string>
			<key>name</key>
			<string>meta.escape-character.latex</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!\S)'.*?'</string>
			<key>name</key>
			<string>invalid.illegal.string.quoted.single.latex</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!\S)".*?"</string>
			<key>name</key>
			<string>invalid.illegal.string.quoted.double.latex</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\\\b(textquotestraightbase|textquotestraightdblbase|texttwelveudash|textthreequartersemdash|textleftarrow|textrightarrow|textblank|textdollar|textquotesingle|textasteriskcentered|textdblhyphen|textfractionsolidus|textzerooldstyle|textoneoldstyle|texttwooldstyle|textthreeoldstyle|textfouroldstyle|textfiveoldstyle|textsixoldstyle|textsevenoldstyle|texteightoldstyle|textnineoldstyle|textlangle|textminus|textrangle|textmho|textbigcircle|textohm|textlbrackdbl|textrbrackdbl|textuparrow|textdownarrow|textasciigrave|textborn|textdivorced|textdied|textleaf|textmarried|textmusicalnote|texttildelow|textdblhyphenchar|textasciibreve|textasciicaron|textgravedbl|textacutedbl|textdagger|textdaggerdbl|textbardbl|textperthousand|textbullet|textcelsius|textdollaroldstyle|textcentoldstyle|textflorin|textcolonmonetary|textwon|textnaira|textguarani|textpeso|textlira|textrecipe|textinterrobang|textinterrobangdown|textdong|texttrademark|textpertenthousand|textpilcrow|textbaht|textnumero|textdiscount|textestimated|textopenbullet|textservicemark|textlquill|textrquill|textcent|textsterling|textcurrency|textyen|textbrokenbar|textsection|textasciidieresis|textcopyright|textordfeminine|textcopyleft|textlnot|textcircledP|textregistered|textasciimacron|textdegree|textpm|texttwosuperior|textthreesuperior|textasciiacute|textmu|textparagraph|textperiodcentered|textreferencemark|textonesuperior|textordmasculine|textsurd|textonequarter|textonehalf|textthreequarters|texteuro|texttimes|textdiv)\b</string>
			<key>name</key>
			<string>constant.character.latex</string>
		</dict>
		<dict>
			<key>include</key>
			<string>source.tex</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>text.latex</string>
	<key>uuid</key>
	<string>3BEEA00C-6B1D-11D9-B8AD-000D93589AF6</string>
</dict>
</plist>
